services:

  reverse-proxy:
    image: nginx
    container_name: user-auth-api-proxy
    depends_on: 
      - api
      - database
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - internal
      - nginx-proxy
  api:
    container_name: api
    build:
      context: ./backend
    depends_on:
      - database
    env_file: 
      - .env
    expose:
      - "3000"
    networks:
      - internal
    restart: on-failure

  database:
    image: postgres:17
    container_name: database
    volumes: 
      - database:/var/lib/postgresql/data
    env_file: 
      - .env
    networks:
      - internal

  frontend:
    container_name: front-end
    build:
      context: ./frontend
    depends_on:
      - api
    expose:
      - "80"
    networks:
      - internal
    restart: on-failure
    
volumes:
  database:

networks:
  internal:
  nginx-proxy:
    external: true